{"openapi": "3.1.0", "info": {"title": "Culinary Institute Inventory", "version": "0.1.0"}, "paths": {"/api/v1/login/access-token": {"post": {"tags": ["login"], "summary": "Login Access Token", "description": "OAuth2 compatible token login, get an access token for future requests", "operationId": "login-login_access_token", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_login-login_access_token"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Token"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/login/test-token": {"post": {"tags": ["login"], "summary": "Test Token", "description": "Test access token", "operationId": "login-test_token", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/password-recovery/{email}": {"post": {"tags": ["login"], "summary": "Recover Password", "description": "Password Recovery", "operationId": "login-recover_password", "parameters": [{"name": "email", "in": "path", "required": true, "schema": {"type": "string", "title": "Email"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/reset-password/": {"post": {"tags": ["login"], "summary": "Reset Password", "description": "Reset password", "operationId": "login-reset_password", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/NewPassword"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/password-recovery-html-content/{email}": {"post": {"tags": ["login"], "summary": "Recover Password Html Content", "description": "HTML Content for Password Recovery", "operationId": "login-recover_password_html_content", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "email", "in": "path", "required": true, "schema": {"type": "string", "title": "Email"}}], "responses": {"200": {"description": "Successful Response", "content": {"text/html": {"schema": {"type": "string"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/users/": {"get": {"tags": ["users"], "summary": "Read Users", "description": "Retrieve users.", "operationId": "users-read_users", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UsersPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["users"], "summary": "Create User", "description": "Create new user.", "operationId": "users-create_user", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/users/me": {"get": {"tags": ["users"], "summary": "Read User Me", "description": "Get current user.", "operationId": "users-read_user_me", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "delete": {"tags": ["users"], "summary": "Delete User Me", "description": "Delete own user.", "operationId": "users-delete_user_me", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "patch": {"tags": ["users"], "summary": "Update User Me", "description": "Update own user.", "operationId": "users-update_user_me", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdateMe"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/users/me/password": {"patch": {"tags": ["users"], "summary": "Update Password Me", "description": "Update own password.", "operationId": "users-update_password_me", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdatePassword"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/users/signup": {"post": {"tags": ["users"], "summary": "Register User", "description": "Create new user without the need to be logged in.", "operationId": "users-register_user", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRegister"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/users/{user_id}": {"get": {"tags": ["users"], "summary": "Read User By Id", "description": "Get a specific user by id.", "operationId": "users-read_user_by_id", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["users"], "summary": "Update User", "description": "Update a user.", "operationId": "users-update_user", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["users"], "summary": "Delete User", "description": "Delete a user.", "operationId": "users-delete_user", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/utils/test-email/": {"post": {"tags": ["utils"], "summary": "Test Email", "description": "Test emails.", "operationId": "utils-test_email", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "email_to", "in": "query", "required": true, "schema": {"type": "string", "format": "email", "title": "Email To"}}], "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/utils/health-check/": {"get": {"tags": ["utils"], "summary": "Health Check", "operationId": "utils-health_check", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "boolean", "title": "Response Utils-Health Check"}}}}}}}, "/api/v1/items/": {"get": {"tags": ["items"], "summary": "Read Items", "description": "Retrieve items.", "operationId": "items-read_items", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemsPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["items"], "summary": "Create Item", "description": "Create new item.", "operationId": "items-create_item", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/items/{id}": {"get": {"tags": ["items"], "summary": "Read Item", "description": "Get item by ID.", "operationId": "items-read_item", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["items"], "summary": "Update Item", "description": "Update an item.", "operationId": "items-update_item", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["items"], "summary": "Delete Item", "description": "Delete an item.", "operationId": "items-delete_item", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/itemsCategory/": {"get": {"tags": ["ItemCategory"], "summary": "Read Item Categories", "description": "Retrieve items.", "operationId": "ItemCategory-read_item_Categories", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}, {"name": "search", "in": "query", "required": false, "schema": {"type": "string", "title": "Search"}}, {"name": "sortBy", "in": "query", "required": false, "schema": {"type": "string", "title": "Sortby"}}, {"name": "sortOrder", "in": "query", "required": false, "schema": {"type": "string", "default": "asc", "title": "Sortorder"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemCategoriesPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["ItemCategory"], "summary": "Create Itemcategory", "description": "Create Item Category", "operationId": "ItemCategory-create_ItemCategory", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemCategoryCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemCategoryPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/itemsCategory/{id}": {"put": {"tags": ["ItemCategory"], "summary": "Update Itemcatergory", "description": "Update Item Category", "operationId": "ItemCategory-update_ItemCatergory", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemCategoryUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemCategoryPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["ItemCategory"], "summary": "Delete Item", "description": "Delete Item Category", "operationId": "ItemCategory-delete_item", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/roles/": {"get": {"tags": ["Role"], "summary": "Read Roles", "description": "Retrieve roles.", "operationId": "Role-read_roles", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}, {"name": "search", "in": "query", "required": false, "schema": {"type": "string", "title": "Search"}}, {"name": "sortBy", "in": "query", "required": false, "schema": {"type": "string", "title": "Sortby"}}, {"name": "sortOrder", "in": "query", "required": false, "schema": {"type": "string", "default": "asc", "title": "Sortorder"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RolesPublicList"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Role"], "summary": "Create Role", "description": "Create a new role.", "operationId": "Role-create_role", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RolesCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RolesPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/roles/{id}": {"put": {"tags": ["Role"], "summary": "Update Role", "description": "Update a role.", "operationId": "Role-update_role", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RolesUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RolesPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"tags": ["Role"], "summary": "Read Role", "description": "Get role by ID.", "operationId": "Role-read_role", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RolesPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Role"], "summary": "Delete Role", "description": "Delete a role (soft delete by setting isactive to False).", "operationId": "Role-delete_role", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/role-claims/": {"get": {"tags": ["RoleClaims"], "summary": "Read Role Claims", "description": "Retrieve role claims with optional filtering by role_id.", "operationId": "RoleClaims-read_role_claims", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}, {"name": "search", "in": "query", "required": false, "schema": {"type": "string", "title": "Search"}}, {"name": "sortBy", "in": "query", "required": false, "schema": {"type": "string", "title": "Sortby"}}, {"name": "sortOrder", "in": "query", "required": false, "schema": {"type": "string", "default": "asc", "title": "Sortorder"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RolesClaimsPublicList"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["RoleClaims"], "summary": "Create Role Claim", "description": "Create a new role claim.", "operationId": "RoleClaims-create_role_claim", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RolesClaimsCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RolesClaimsPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/role-claims/{role_claim_id}": {"get": {"tags": ["RoleClaims"], "summary": "Read Role Claim", "description": "Get a specific role claim by ID.", "operationId": "RoleClaims-read_role_claim", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "role_claim_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Role Claim Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RolesClaimsPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["RoleClaims"], "summary": "Delete Role Claim", "description": "Delete a role claim.\nBy default, this is a soft delete (sets isactive to False).\nSet permanent=true to permanently delete the record.", "operationId": "RoleClaims-delete_role_claim", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "role_claim_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Role Claim Id"}}, {"name": "permanent", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Permanently delete the claim instead of soft delete", "default": false, "title": "Permanent"}, "description": "Permanently delete the claim instead of soft delete"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/role-claims/{id}": {"put": {"tags": ["RoleClaims"], "summary": "Update Role Claim", "description": "Update a role claim.", "operationId": "RoleClaims-update_role_claim", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RolesClaimsUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RolesClaimsPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/itemsSubCategory/": {"get": {"tags": ["ItemSubCategory"], "summary": "Read Item Subcategories", "description": "Retrieve item subcategories.", "operationId": "ItemSubCategory-read_item_subcategories", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}, {"name": "search", "in": "query", "required": false, "schema": {"type": "string", "title": "Search"}}, {"name": "sortBy", "in": "query", "required": false, "schema": {"type": "string", "title": "Sortby"}}, {"name": "sortOrder", "in": "query", "required": false, "schema": {"type": "string", "default": "asc", "title": "Sortorder"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemSubCategoriesPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["ItemSubCategory"], "summary": "Create Item Subcategory", "description": "Create a new item subcategory.", "operationId": "ItemSubCategory-create_item_subcategory", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemSubCategoryCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemSubCategoryPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/itemsSubCategory/category/{category_id}": {"get": {"tags": ["ItemSubCategory"], "summary": "Read Item Subcategories By Category", "description": "Retrieve item subcategories by category ID.", "operationId": "ItemSubCategory-read_item_subcategories_by_category", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "category_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Category Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemSubCategoriesPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/itemsSubCategory/{id}": {"get": {"tags": ["ItemSubCategory"], "summary": "Read Item Subcategory", "description": "Get a specific item subcategory by ID with its parent category.", "operationId": "ItemSubCategory-read_item_subcategory", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemSubCategoryWithCategory"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["ItemSubCategory"], "summary": "Update Item Subcategory", "description": "Update an item subcategory.", "operationId": "ItemSubCategory-update_item_subcategory", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemSubCategoryUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemSubCategoryPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["ItemSubCategory"], "summary": "Delete Item Subcategory", "description": "Soft delete an item subcategory.", "operationId": "ItemSubCategory-delete_item_subcategory", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/userroles/": {"get": {"tags": ["UserRole"], "summary": "Read User Roles", "description": "Retrieve user roles.", "operationId": "UserRole-read_user_roles", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRolesPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["UserRole"], "summary": "Create User Role", "description": "Assign a role to a user.", "operationId": "UserRole-create_user_role", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRoleCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRolesPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/userroles/{id}": {"put": {"tags": ["UserRole"], "summary": "Update User Role", "description": "Update a user role.", "operationId": "UserRole-update_user_role", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRoleUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRolesPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"tags": ["UserRole"], "summary": "Read User Role", "description": "Get user role by ID.", "operationId": "UserRole-read_user_role", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRolesPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["UserRole"], "summary": "Delete User Role", "description": "Remove a role from a user (soft delete by setting isactive to False).", "operationId": "UserRole-delete_user_role", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/userroles/user/{user_id}": {"get": {"tags": ["UserRole"], "summary": "Read User Roles By User", "description": "Get all roles for a specific user.", "operationId": "UserRole-read_user_roles_by_user", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRolePublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/userroles/role/{role_id}": {"get": {"tags": ["UserRole"], "summary": "Read Users By Role", "description": "Get all users that have a specific role.", "operationId": "UserRole-read_users_by_role", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "role_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Role Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRolePublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/locations/": {"get": {"tags": ["Location"], "summary": "Read Locations", "description": "Retrieve locations.", "operationId": "Location-read_locations", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}, {"name": "search", "in": "query", "required": false, "schema": {"type": "string", "title": "Search"}}, {"name": "sortBy", "in": "query", "required": false, "schema": {"type": "string", "title": "Sortby"}}, {"name": "sortOrder", "in": "query", "required": false, "schema": {"type": "string", "default": "asc", "title": "Sortorder"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LocationsPublicList"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Location"], "summary": "Create Location", "description": "Create a new location.", "operationId": "Location-create_location", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LocationsCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LocationsPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/locations/{id}": {"put": {"tags": ["Location"], "summary": "Update Location", "description": "Update a location.", "operationId": "Location-update_location", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LocationsUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LocationsPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"tags": ["Location"], "summary": "Read Location", "description": "Get location by ID.", "operationId": "Location-read_location", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LocationsPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Location"], "summary": "Delete Location", "description": "Delete a location (soft delete by setting location_is_active to False).", "operationId": "Location-delete_location", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/semesters/": {"get": {"tags": ["Semester"], "summary": "Read Semesters", "description": "Retrieve semesters.", "operationId": "Semester-read_semesters", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}, {"name": "search", "in": "query", "required": false, "schema": {"type": "string", "title": "Search"}}, {"name": "sortBy", "in": "query", "required": false, "schema": {"type": "string", "title": "Sortby"}}, {"name": "sortOrder", "in": "query", "required": false, "schema": {"type": "string", "default": "asc", "title": "Sortorder"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SemestersPublicList"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Semester"], "summary": "Create Semester", "description": "Create a new semester.", "operationId": "Semester-create_semester", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SemestersCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SemestersPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/semesters/current": {"get": {"tags": ["Semester"], "summary": "Get Current Semester", "description": "Get the current active semester based on the current date.", "operationId": "Semester-get_current_semester", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SemestersPublic"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/semesters/{id}": {"put": {"tags": ["Semester"], "summary": "Update Semester", "description": "Update a semester.", "operationId": "Semester-update_semester", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SemestersUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SemestersPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"tags": ["Semester"], "summary": "Read Semester", "description": "Get semester by ID.", "operationId": "Semester-read_semester", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SemestersPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Semester"], "summary": "Delete Semester", "description": "Delete a semester (soft delete by setting is_active to False).", "operationId": "Semester-delete_semester", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/courses/": {"get": {"tags": ["Course"], "summary": "Read Courses", "description": "Retrieve courses with optional filtering by semester.", "operationId": "Course-read_courses", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}, {"name": "search", "in": "query", "required": false, "schema": {"type": "string", "title": "Search"}}, {"name": "sortBy", "in": "query", "required": false, "schema": {"type": "string", "title": "Sortby"}}, {"name": "sortOrder", "in": "query", "required": false, "schema": {"type": "string", "default": "asc", "title": "Sortorder"}}, {"name": "semester_id", "in": "query", "required": false, "schema": {"type": "string", "format": "uuid", "title": "Semester Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CoursesPublicList"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Course"], "summary": "Create Course", "description": "Create a new course associated with a semester.", "operationId": "Course-create_course", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CoursesCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CoursesPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/courses/{id}": {"put": {"tags": ["Course"], "summary": "Update Course", "description": "Update a course.", "operationId": "Course-update_course", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CoursesUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CoursesPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"tags": ["Course"], "summary": "Read Course", "description": "Get course by ID.", "operationId": "Course-read_course", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CoursesPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Course"], "summary": "Delete Course", "description": "Delete a course (soft delete by setting is_active to False).", "operationId": "Course-delete_course", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/courses/semester/{semester_id}": {"get": {"tags": ["Course"], "summary": "Read Courses By Semester", "description": "Get all courses for a specific semester.", "operationId": "Course-read_courses_by_semester", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "semester_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Semester Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CoursesPublicList"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/suppliers/": {"get": {"tags": ["Supplier"], "summary": "Read Suppliers", "description": "Retrieve suppliers.", "operationId": "Supplier-read_suppliers", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}, {"name": "search", "in": "query", "required": false, "schema": {"type": "string", "title": "Search"}}, {"name": "sortBy", "in": "query", "required": false, "schema": {"type": "string", "title": "Sortby"}}, {"name": "sortOrder", "in": "query", "required": false, "schema": {"type": "string", "default": "asc", "title": "Sortorder"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuppliersPublicList"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["Supplier"], "summary": "Create Supplier", "description": "Create a new supplier.", "operationId": "Supplier-create_supplier", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuppliersCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuppliersPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/suppliers/{id}": {"put": {"tags": ["Supplier"], "summary": "Update Supplier", "description": "Update a supplier.", "operationId": "Supplier-update_supplier", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuppliersUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuppliersPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"tags": ["Supplier"], "summary": "Read Supplier", "description": "Get supplier by ID.", "operationId": "Supplier-read_supplier", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuppliersPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["Supplier"], "summary": "Delete Supplier", "description": "Delete a supplier (soft delete by setting is_active to False).", "operationId": "Supplier-delete_supplier", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/private/users/": {"post": {"tags": ["private"], "summary": "Create User", "description": "Create a new user.", "operationId": "private-create_user", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PrivateUserCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Body_login-login_access_token": {"properties": {"grant_type": {"anyOf": [{"type": "string", "pattern": "password"}, {"type": "null"}], "title": "Grant Type"}, "username": {"type": "string", "title": "Username"}, "password": {"type": "string", "title": "Password"}, "scope": {"type": "string", "title": "Scope", "default": ""}, "client_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Id"}, "client_secret": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Secret"}}, "type": "object", "required": ["username", "password"], "title": "Body_login-login_access_token"}, "CoursesCreate": {"properties": {"course_name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Course Name"}, "course_description": {"type": "string", "title": "Course Description", "default": ""}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}}, "type": "object", "required": ["course_name"], "title": "CoursesCreate", "description": "Model for creating Courses"}, "CoursesPublic": {"properties": {"course_name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Course Name"}, "course_description": {"type": "string", "title": "Course Description", "default": ""}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "course_id": {"type": "string", "format": "uuid", "title": "Course Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Updated At"}, "created_by_id": {"type": "string", "format": "uuid", "title": "Created By Id"}, "updated_by_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Updated By Id"}}, "type": "object", "required": ["course_name", "course_id", "created_at", "created_by_id"], "title": "CoursesPublic", "description": "Model for the Public API response"}, "CoursesPublicList": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CoursesPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "CoursesPublicList", "description": "Container for multiple courses"}, "CoursesUpdate": {"properties": {"course_name": {"anyOf": [{"type": "string", "maxLength": 255, "minLength": 1}, {"type": "null"}], "title": "Course Name"}, "course_description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Course Description"}, "is_active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Active"}}, "type": "object", "title": "CoursesUpdate", "description": "Model to update courses information"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "ItemCategoriesPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ItemCategoryPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "ItemCategoriesPublic", "description": "Container for multiple categories"}, "ItemCategoryCreate": {"properties": {"item_category_name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Item Category Name"}, "item_category_code": {"type": "string", "maxLength": 100, "minLength": 1, "title": "Item Category Code"}, "item_category_isactive": {"type": "boolean", "title": "Item Category Isactive", "default": true}}, "type": "object", "required": ["item_category_name", "item_category_code"], "title": "ItemCategoryCreate", "description": "Model for creating a new category"}, "ItemCategoryPublic": {"properties": {"item_category_name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Item Category Name"}, "item_category_code": {"type": "string", "maxLength": 100, "minLength": 1, "title": "Item Category Code"}, "item_category_isactive": {"type": "boolean", "title": "Item Category Isactive", "default": true}, "item_category_id": {"type": "string", "format": "uuid", "title": "Item Category Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Updated At"}, "created_by_id": {"type": "string", "format": "uuid", "title": "Created By Id"}, "updated_by_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Updated By Id"}}, "type": "object", "required": ["item_category_name", "item_category_code", "item_category_id", "created_at", "created_by_id"], "title": "ItemCategoryPublic", "description": "Model for public API responses"}, "ItemCategoryUpdate": {"properties": {"item_category_code": {"anyOf": [{"type": "string", "maxLength": 100, "minLength": 1}, {"type": "null"}], "title": "Item Category Code"}, "item_category_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Item Category Name"}, "item_category_isactive": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Item Category Isactive"}}, "type": "object", "title": "ItemCategoryUpdate", "description": "Model for updating an existing category"}, "ItemCreate": {"properties": {"title": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Title"}, "description": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Description"}}, "type": "object", "required": ["title"], "title": "ItemCreate"}, "ItemPublic": {"properties": {"title": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Title"}, "description": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Description"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "owner_id": {"type": "string", "format": "uuid", "title": "Owner Id"}}, "type": "object", "required": ["title", "id", "owner_id"], "title": "ItemPublic"}, "ItemSubCategoriesPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ItemSubCategoryPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "ItemSubCategoriesPublic", "description": "Container for multiple subcategories"}, "ItemSubCategoryCreate": {"properties": {"item_subcategory_name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Item Subcategory Name"}, "item_subcategory_code": {"type": "string", "maxLength": 100, "minLength": 1, "title": "Item Subcategory Code"}, "item_subcategory_isactive": {"type": "boolean", "title": "Item Subcategory Isactive", "default": true}, "item_category_id": {"type": "string", "format": "uuid", "title": "Item Category Id"}}, "type": "object", "required": ["item_subcategory_name", "item_subcategory_code", "item_category_id"], "title": "ItemSubCategoryCreate", "description": "Model for creating a new subcategory"}, "ItemSubCategoryPublic": {"properties": {"item_subcategory_name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Item Subcategory Name"}, "item_subcategory_code": {"type": "string", "maxLength": 100, "minLength": 1, "title": "Item Subcategory Code"}, "item_subcategory_isactive": {"type": "boolean", "title": "Item Subcategory Isactive", "default": true}, "item_category_id": {"type": "string", "format": "uuid", "title": "Item Category Id"}, "item_subcategory_id": {"type": "string", "format": "uuid", "title": "Item Subcategory Id"}, "item_category_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Item Category Name"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Updated At"}, "created_by_id": {"type": "string", "format": "uuid", "title": "Created By Id"}, "updated_by_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Updated By Id"}, "category": {"anyOf": [{"$ref": "#/components/schemas/ItemCategoryPublic"}, {"type": "null"}]}}, "type": "object", "required": ["item_subcategory_name", "item_subcategory_code", "item_category_id", "item_subcategory_id", "created_at", "created_by_id"], "title": "ItemSubCategoryPublic", "description": "Model for public API responses"}, "ItemSubCategoryUpdate": {"properties": {"item_subcategory_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Item Subcategory Name"}, "item_subcategory_code": {"anyOf": [{"type": "string", "maxLength": 100, "minLength": 1}, {"type": "null"}], "title": "Item Subcategory Code"}, "item_subcategory_isactive": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Item Subcategory Isactive"}, "item_category_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Item Category Id"}}, "type": "object", "title": "ItemSubCategoryUpdate", "description": "Model for updating an existing subcategory"}, "ItemSubCategoryWithCategory": {"properties": {"item_subcategory_name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Item Subcategory Name"}, "item_subcategory_code": {"type": "string", "maxLength": 100, "minLength": 1, "title": "Item Subcategory Code"}, "item_subcategory_isactive": {"type": "boolean", "title": "Item Subcategory Isactive", "default": true}, "item_category_id": {"type": "string", "format": "uuid", "title": "Item Category Id"}, "item_subcategory_id": {"type": "string", "format": "uuid", "title": "Item Subcategory Id"}, "item_category_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Item Category Name"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Updated At"}, "created_by_id": {"type": "string", "format": "uuid", "title": "Created By Id"}, "updated_by_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Updated By Id"}, "category": {"anyOf": [{"$ref": "#/components/schemas/ItemCategoryPublic"}, {"type": "null"}]}}, "type": "object", "required": ["item_subcategory_name", "item_subcategory_code", "item_category_id", "item_subcategory_id", "created_at", "created_by_id"], "title": "ItemSubCategoryWithCategory", "description": "Model for public API responses with category details"}, "ItemUpdate": {"properties": {"title": {"anyOf": [{"type": "string", "maxLength": 255, "minLength": 1}, {"type": "null"}], "title": "Title"}, "description": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Description"}}, "type": "object", "title": "ItemUpdate"}, "ItemsPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ItemPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "ItemsPublic"}, "LocationsCreate": {"properties": {"location_name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Location Name"}, "location_is_active": {"type": "boolean", "title": "Location Is Active", "default": true}}, "type": "object", "required": ["location_name"], "title": "LocationsCreate", "description": "Model for creating Locations"}, "LocationsPublic": {"properties": {"location_name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Location Name"}, "location_is_active": {"type": "boolean", "title": "Location Is Active", "default": true}, "location_id": {"type": "string", "format": "uuid", "title": "Location Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Updated At"}, "created_by_id": {"type": "string", "format": "uuid", "title": "Created By Id"}, "updated_by_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Updated By Id"}}, "type": "object", "required": ["location_name", "location_id", "created_at", "created_by_id"], "title": "LocationsPublic", "description": "Model for the Public API response"}, "LocationsPublicList": {"properties": {"data": {"items": {"$ref": "#/components/schemas/LocationsPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "LocationsPublicList", "description": "Container for multiple locations"}, "LocationsUpdate": {"properties": {"location_name": {"anyOf": [{"type": "string", "maxLength": 255, "minLength": 1}, {"type": "null"}], "title": "Location Name"}, "location_is_active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Location Is Active"}}, "type": "object", "required": ["location_name"], "title": "LocationsUpdate", "description": "Model to update locations information"}, "Message": {"properties": {"message": {"type": "string", "title": "Message"}}, "type": "object", "required": ["message"], "title": "Message"}, "NewPassword": {"properties": {"token": {"type": "string", "title": "Token"}, "new_password": {"type": "string", "maxLength": 40, "minLength": 8, "title": "New Password"}}, "type": "object", "required": ["token", "new_password"], "title": "NewPassword"}, "PrivateUserCreate": {"properties": {"email": {"type": "string", "title": "Email"}, "password": {"type": "string", "title": "Password"}, "full_name": {"type": "string", "title": "Full Name"}, "is_verified": {"type": "boolean", "title": "Is Verified", "default": false}}, "type": "object", "required": ["email", "password", "full_name"], "title": "PrivateUserCreate"}, "RolesClaimsCreate": {"properties": {"role_claim_type": {"type": "string", "maxLength": 100, "minLength": 1, "title": "Role Claim Type"}, "role_claim_value": {"type": "string", "maxLength": 100, "minLength": 1, "title": "Role Claim Value"}, "role_claim_isactive": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Role Claim Isactive"}, "role_id": {"type": "string", "format": "uuid", "title": "Role Id"}}, "type": "object", "required": ["role_claim_type", "role_claim_value", "role_id"], "title": "RolesClaimsCreate", "description": "Create Roles Claims"}, "RolesClaimsPublic": {"properties": {"role_claim_type": {"type": "string", "maxLength": 100, "minLength": 1, "title": "Role Claim Type"}, "role_claim_value": {"type": "string", "maxLength": 100, "minLength": 1, "title": "Role Claim Value"}, "role_claim_isactive": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Role Claim Isactive"}, "role_id": {"type": "string", "format": "uuid", "title": "Role Id"}, "role_claim_id": {"type": "string", "format": "uuid", "title": "Role Claim Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Updated At"}, "created_by_id": {"type": "string", "format": "uuid", "title": "Created By Id"}, "updated_by_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Updated By Id"}}, "type": "object", "required": ["role_claim_type", "role_claim_value", "role_id", "role_claim_id", "created_at", "created_by_id"], "title": "RolesClaimsPublic", "description": "Model for public API Response"}, "RolesClaimsPublicList": {"properties": {"data": {"items": {"$ref": "#/components/schemas/RolesClaimsPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "RolesClaimsPublicList", "description": "Container for multiple subcategories"}, "RolesClaimsUpdate": {"properties": {"role_claim_type": {"type": "string", "maxLength": 100, "minLength": 1, "title": "Role Claim Type"}, "role_claim_value": {"type": "string", "maxLength": 100, "minLength": 1, "title": "Role Claim Value"}, "role_claim_isactive": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Role Claim Isactive"}, "role_id": {"type": "string", "format": "uuid", "title": "Role Id"}}, "type": "object", "required": ["role_claim_type", "role_claim_value", "role_id"], "title": "RolesClaimsUpdate"}, "RolesCreate": {"properties": {"role_name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Role Name"}, "role_is_active": {"type": "boolean", "title": "Role Is Active", "default": true}}, "type": "object", "required": ["role_name"], "title": "RolesCreate", "description": "Model for creating Roles"}, "RolesPublic": {"properties": {"role_name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Role Name"}, "role_is_active": {"type": "boolean", "title": "Role Is Active", "default": true}, "role_id": {"type": "string", "format": "uuid", "title": "Role Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Updated At"}, "created_by_id": {"type": "string", "format": "uuid", "title": "Created By Id"}, "updated_by_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Updated By Id"}}, "type": "object", "required": ["role_name", "role_id", "created_at", "created_by_id"], "title": "RolesPublic", "description": "Model for the Public API response"}, "RolesPublicList": {"properties": {"data": {"items": {"$ref": "#/components/schemas/RolesPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "RolesPublicList", "description": "Container for multiple categories"}, "RolesUpdate": {"properties": {"role_name": {"anyOf": [{"type": "string", "maxLength": 255, "minLength": 1}, {"type": "null"}], "title": "Role Name"}, "role_is_active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Role Is Active"}}, "type": "object", "required": ["role_name"], "title": "RolesUpdate", "description": "Model to update roles information"}, "SemestersCreate": {"properties": {"semester_name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Semester Name"}, "start_date": {"type": "string", "format": "date-time", "title": "Start Date"}, "end_date": {"type": "string", "format": "date-time", "title": "End Date"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}}, "type": "object", "required": ["semester_name", "start_date", "end_date"], "title": "SemestersCreate", "description": "Model for creating Semesters"}, "SemestersPublic": {"properties": {"semester_name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Semester Name"}, "start_date": {"type": "string", "format": "date-time", "title": "Start Date"}, "end_date": {"type": "string", "format": "date-time", "title": "End Date"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "semester_id": {"type": "string", "format": "uuid", "title": "Semester Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Updated At"}, "created_by_id": {"type": "string", "format": "uuid", "title": "Created By Id"}, "updated_by_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Updated By Id"}}, "type": "object", "required": ["semester_name", "start_date", "end_date", "semester_id", "created_at", "created_by_id"], "title": "SemestersPublic", "description": "Model for the Public API response"}, "SemestersPublicList": {"properties": {"data": {"items": {"$ref": "#/components/schemas/SemestersPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "SemestersPublicList", "description": "Container for multiple semesters"}, "SemestersUpdate": {"properties": {"semester_name": {"anyOf": [{"type": "string", "maxLength": 255, "minLength": 1}, {"type": "null"}], "title": "Semester Name"}, "start_date": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Start Date"}, "end_date": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "End Date"}, "is_active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Active"}}, "type": "object", "title": "SemestersUpdate", "description": "Model to update semesters information"}, "SuppliersCreate": {"properties": {"supplier_name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Supplier Name"}, "contact_person": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Contact Person"}, "phone_number": {"anyOf": [{"type": "string", "maxLength": 20}, {"type": "null"}], "title": "Phone Number"}, "email": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Email"}, "address": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Address"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}}, "type": "object", "required": ["supplier_name"], "title": "SuppliersCreate", "description": "Model for creating Suppliers"}, "SuppliersPublic": {"properties": {"supplier_name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Supplier Name"}, "contact_person": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Contact Person"}, "phone_number": {"anyOf": [{"type": "string", "maxLength": 20}, {"type": "null"}], "title": "Phone Number"}, "email": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Email"}, "address": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Address"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "supplier_id": {"type": "string", "format": "uuid", "title": "Supplier Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Updated At"}, "created_by_id": {"type": "string", "format": "uuid", "title": "Created By Id"}, "updated_by_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Updated By Id"}}, "type": "object", "required": ["supplier_name", "supplier_id", "created_at", "created_by_id"], "title": "SuppliersPublic", "description": "Model for the Public API response"}, "SuppliersPublicList": {"properties": {"data": {"items": {"$ref": "#/components/schemas/SuppliersPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "SuppliersPublicList", "description": "Container for multiple suppliers"}, "SuppliersUpdate": {"properties": {"supplier_name": {"anyOf": [{"type": "string", "maxLength": 255, "minLength": 1}, {"type": "null"}], "title": "Supplier Name"}, "contact_person": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Contact Person"}, "phone_number": {"anyOf": [{"type": "string", "maxLength": 20}, {"type": "null"}], "title": "Phone Number"}, "email": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Email"}, "address": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Address"}, "is_active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Active"}}, "type": "object", "title": "SuppliersUpdate", "description": "Model to update suppliers information"}, "Token": {"properties": {"access_token": {"type": "string", "title": "Access Token"}, "token_type": {"type": "string", "title": "Token Type", "default": "bearer"}}, "type": "object", "required": ["access_token"], "title": "Token"}, "UpdatePassword": {"properties": {"current_password": {"type": "string", "maxLength": 40, "minLength": 8, "title": "Current Password"}, "new_password": {"type": "string", "maxLength": 40, "minLength": 8, "title": "New Password"}}, "type": "object", "required": ["current_password", "new_password"], "title": "UpdatePassword"}, "UserCreate": {"properties": {"email": {"type": "string", "maxLength": 255, "format": "email", "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "is_superuser": {"type": "boolean", "title": "Is Superuser", "default": false}, "full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}, "password": {"type": "string", "maxLength": 40, "minLength": 8, "title": "Password"}}, "type": "object", "required": ["email", "password"], "title": "UserCreate"}, "UserPublic": {"properties": {"email": {"type": "string", "maxLength": 255, "format": "email", "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "is_superuser": {"type": "boolean", "title": "Is Superuser", "default": false}, "full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}, "id": {"type": "string", "format": "uuid", "title": "Id"}}, "type": "object", "required": ["email", "id"], "title": "UserPublic"}, "UserRegister": {"properties": {"email": {"type": "string", "maxLength": 255, "format": "email", "title": "Email"}, "password": {"type": "string", "maxLength": 40, "minLength": 8, "title": "Password"}, "full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}}, "type": "object", "required": ["email", "password"], "title": "UserRegister"}, "UserRoleCreate": {"properties": {"is_active": {"type": "boolean", "title": "Is Active", "default": true}, "user_id": {"type": "string", "format": "uuid", "title": "User Id"}, "role_id": {"type": "string", "format": "uuid", "title": "Role Id"}}, "type": "object", "required": ["user_id", "role_id"], "title": "UserRoleCreate", "description": "Model for creating a user role association"}, "UserRolePublic": {"properties": {"is_active": {"type": "boolean", "title": "Is Active", "default": true}, "user_role_id": {"type": "string", "format": "uuid", "title": "User Role Id"}, "user_id": {"type": "string", "format": "uuid", "title": "User Id"}, "role_id": {"type": "string", "format": "uuid", "title": "Role Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Updated At"}, "created_by_id": {"type": "string", "format": "uuid", "title": "Created By Id"}, "updated_by_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Updated By Id"}}, "type": "object", "required": ["user_role_id", "user_id", "role_id", "created_at", "created_by_id"], "title": "UserRolePublic", "description": "Model for public API responses"}, "UserRoleUpdate": {"properties": {"is_active": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Active"}}, "type": "object", "title": "UserRoleUpdate", "description": "Model for updating a user role association"}, "UserRolesPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/UserRolePublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "UserRolesPublic", "description": "Container for multiple user role associations"}, "UserUpdate": {"properties": {"email": {"anyOf": [{"type": "string", "maxLength": 255, "format": "email"}, {"type": "null"}], "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "is_superuser": {"type": "boolean", "title": "Is Superuser", "default": false}, "full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}, "password": {"anyOf": [{"type": "string", "maxLength": 40, "minLength": 8}, {"type": "null"}], "title": "Password"}}, "type": "object", "title": "UserUpdate"}, "UserUpdateMe": {"properties": {"full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}, "email": {"anyOf": [{"type": "string", "maxLength": 255, "format": "email"}, {"type": "null"}], "title": "Email"}}, "type": "object", "title": "UserUpdateMe"}, "UsersPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/UserPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "UsersPublic"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "/api/v1/login/access-token"}}}}}}
